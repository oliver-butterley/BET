name: Check for updates

on:
  schedule:
    - cron: "0 10 * * 6" # every saturday at 10:00
  workflow_dispatch: # allows manual starts

jobs:
  attempt-update:
    runs-on: ubuntu-latest
    permissions:
      issues: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install elan
        run: |
          curl https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh -sSf | sh -s -- -y
          echo "$HOME/.elan/bin" >> $GITHUB_PATH

      - name: update
        run: lake update

      - name: Check if anything was updated
        uses: tj-actions/verify-changed-files@v18
        id: check-update
        with:
          files: |
            lean-toolchain
            lake-manifest.json

      - name: Try to build lean if something was updated
        if: steps.check-update.outputs.files_changed == 'true'
        id: build-lean
        continue-on-error: true
        env:
          CHANGED_FILES: ${{ steps.check-update.outputs.changed_files }}
        run: |
          echo "Updates performed: $CHANGED_FILES"
          lake exe cache get || true
          lake build

      - name: Run step only if nothing was updated
        if: steps.check-update.outputs.files_changed == 'false'
        run: |
          echo "No update available"

      - name: Open PR if the updated lean build was successful
        if: steps.build-lean.outcome == 'success'
        uses: peter-evans/create-pull-request@v6
        with:
          title: "Updates available and ready to merge."
          body: "Would be useful to have some details here..."
          delete-branch: true
          branch-suffix: random
          branch: auto-update/patch

      - name: Open issue if the updated lean build fails
        if: steps.build-lean.outcome == 'failure'
        run: |
          if [[ $CLOSE_PREVIOUS == true ]]; then
            previous_issue_number=$(gh issue list \
              --title "$TITLE" \
              --json number \
              --jq '.[0].number')
            if [[ -n $previous_issue_number ]]; then
              gh issue close "$previous_issue_number"
            fi
          fi
          new_issue_url=$(gh issue create \
            --title "$TITLE" \
            --label "$LABELS" \
            --body "$BODY")
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          TITLE: Updates available but manual intervention required
          LABELS: bug
          BODY: |
            Update info...

            Files changed: ${{ steps.check-update.outputs.changed_files }}

          CLOSE_PREVIOUS: true
